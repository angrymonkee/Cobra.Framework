{
  "Files": [
    {
      "Content": "# {ModuleName}.psm1 - Standalone Module\r\n# Created: {Date}\r\n# Author: {Author}\r\n# Description: {Description}\r\n\r\n#region Initialization\r\nfunction Initialize-{ModuleName}Module {\r\n    [CmdletBinding()]\r\n    param()\r\n\r\n    # Validate configuration\r\n    $config = . \"$PSScriptRoot/config.ps1\"\r\n    if (-not $config) {\r\n        throw \"Failed to load module configuration\"\r\n    }\r\n    \r\n    # Load module configuration\r\n    $config = . \"$PSScriptRoot/config.ps1\"\r\n    \r\n    # Register as standalone module (no repository dependency)\r\n    Register-CobraStandaloneModule -Name \"{ModuleName}\" -Description \"$($config.Description)\" -Config $config\r\n\r\n    Log-CobraActivity \"{ModuleName} standalone module initialized\"\r\n}\r\n#endregion\r\n\r\n#region Core Module Functions\r\nfunction Get-{ModuleName}Status {\r\n    [CmdletBinding()]\r\n    param()\r\n    \r\n    $config = . \"$PSScriptRoot/config.ps1\"\r\n    Write-Host \"{ModuleName} Module Status:\" -ForegroundColor Cyan\r\n    Write-Host \"  Name: $($config.Name)\" -ForegroundColor White\r\n    Write-Host \"  Description: $($config.Description)\" -ForegroundColor White\r\n    Write-Host \"  Version: $($config.Version)\" -ForegroundColor White\r\n    Write-Host \"  Type: Standalone\" -ForegroundColor Green\r\n}\r\n\r\nfunction Test-{ModuleName}Configuration {\r\n    [CmdletBinding()]\r\n    param()\r\n    \r\n    $config = . \"$PSScriptRoot/config.ps1\"\r\n    \r\n    Write-Host \"Testing {ModuleName} configuration...\" -ForegroundColor Yellow\r\n    \r\n    # Validate required configuration\r\n    $requiredKeys = @('Name', 'Description', 'Version', 'ModuleType')\r\n    $isValid = $true\r\n    \r\n    foreach ($key in $requiredKeys) {\r\n        if (-not $config.ContainsKey($key) -or [string]::IsNullOrWhiteSpace($config[$key])) {\r\n            Write-Host \"  ‚ùå Missing or empty: $key\" -ForegroundColor Red\r\n            $isValid = $false\r\n        }\r\n        else {\r\n            Write-Host \"  ‚úì $key`: $($config[$key])\" -ForegroundColor Green\r\n        }\r\n    }\r\n    \r\n    # Add module-specific configuration validation here\r\n    \r\n    if ($isValid) {\r\n        Write-Host \"‚úì {ModuleName} configuration is valid\" -ForegroundColor Green\r\n    }\r\n    else {\r\n        Write-Host \"‚ùå {ModuleName} configuration has errors\" -ForegroundColor Red\r\n    }\r\n    \r\n    return $isValid\r\n}\r\n\r\nfunction Show-{ModuleName}Help {\r\n    [CmdletBinding()]\r\n    param()\r\n    \r\n    Write-Host \"{ModuleName} - Standalone Module\" -ForegroundColor Cyan\r\n    Write-Host \"============================\" -ForegroundColor Cyan\r\n    Write-Host\r\n    Write-Host \"Quick Access:\" -ForegroundColor Yellow\r\n    Write-Host \"  {ModuleName}                     - Show this help (alias)\"\r\n    Write-Host \"  {ModuleNameLower}                     - Show this help (alias)\"\r\n    Write-Host\r\n    Write-Host \"Available Commands:\" -ForegroundColor Yellow\r\n    Write-Host \"  Get-{ModuleName}Status           - Show module status and configuration\"\r\n    Write-Host \"  Test-{ModuleName}Configuration   - Validate module configuration\"\r\n    Write-Host \"  Show-{ModuleName}Help            - Show this help information\"\r\n    Write-Host\r\n    Write-Host \"Configuration:\" -ForegroundColor Yellow\r\n    Write-Host \"  Module configuration is stored in config.ps1\"\r\n    Write-Host \"  This is a standalone module and does not require a repository\"\r\n    Write-Host\r\n    # Add module-specific help here\r\n}\r\n\r\n# Create intuitive module alias - typing module name shows help\r\nSet-Alias -Name {ModuleName} -Value Show-{ModuleName}Help -Scope Global\r\nSet-Alias -Name {ModuleNameLower} -Value Show-{ModuleName}Help -Scope Global\r\n#endregion\r\n\r\n# Export module functions and aliases\r\nExport-ModuleMember -Function @(\r\n    'Initialize-{ModuleName}Module',\r\n    'Get-{ModuleName}Status',\r\n    'Test-{ModuleName}Configuration',\r\n    'Show-{ModuleName}Help'\r\n) -Alias @('{ModuleName}', '{ModuleNameLower}')\r\n\r\n# Module initialization\r\n$config = . \"$PSScriptRoot/config.ps1\"\r\nWrite-Host \"üìã {ModuleName} module loaded (Version: $($config.Version))\" -ForegroundColor Cyan\r\nLog-CobraActivity \"{ModuleName} module loaded with version: $($config.Version)\"\r\n\r\n# Register the module with Cobra Framework\r\nInitialize-{ModuleName}Module\r\n",
      "Name": "{ModuleName}.psm1"
    },
    {
      "Content": "# {ModuleName} Standalone Module Configuration\r\n# This module does not depend on a repository\r\n\r\n@{\r\n    # Basic module information\r\n    Name               = \"{ModuleName}\"\r\n    Description        = \"{Description}\"\r\n    Version            = \"1.0.0\"\r\n    Author             = \"{Author}\"\r\n    ModuleType         = \"Standalone\"\r\n    \r\n    # Creation metadata\r\n    Created            = \"{Date}\"\r\n    LastModified       = \"{Date}\"\r\n    \r\n    # Module capabilities\r\n    Capabilities       = @(\r\n        \"Configuration\",\r\n        \"Status\",\r\n        \"Help\"\r\n    )\r\n    \r\n    # Dependencies (other Cobra modules this module requires)\r\n    Dependencies       = @(\r\n        # Example: \"Utils\", \"Communication\"\r\n    )\r\n    \r\n    # Module-specific configuration\r\n    Settings = @{\r\n        # Add your module-specific settings here\r\n        # Example:\r\n        # ApiEndpoint = \"https://api.example.com\"\r\n        # Timeout = 30\r\n        # EnableLogging = $true\r\n    }\r\n    \r\n    # Command aliases (optional)\r\n    Aliases = @{\r\n        # Example: \"email\" = \"Send-Email\"\r\n    }\r\n    \r\n    # Integration points (optional)\r\n    Integrations = @{\r\n        # Dashboard integration\r\n        Dashboard = @{\r\n            Enabled = $true\r\n            ShowInStatus = $true\r\n            Priority = \"Normal\"  # High, Normal, Low\r\n        }\r\n        \r\n        # AI integration  \r\n        AI = @{\r\n            Enabled = $false\r\n            SupportedTypes = @()\r\n        }\r\n        \r\n        # Template integration\r\n        Templates = @{\r\n            Enabled = $false\r\n            TemplateDirectory = \"\"\r\n        }\r\n    }\r\n}\r\n",
      "Name": "config.ps1"
    }
  ],
  "Description": "Standalone PowerShell module that doesn't depend on a repository",
  "Name": "standalone-module",
  "Author": "Cobra Framework",
  "Created": "2025-08-13"
}
