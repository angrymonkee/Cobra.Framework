{
  "Files": [
    {
      "Content": "# {ModuleName}.psm1 - Generated from Cobra Framework template\r\n# Created: {Date}\r\n# Author: {Author}\r\n\r\nfunction Initialize-{ModuleName}Module {\r\n    [CmdletBinding()]\r\n    param()\r\n    \r\n    $config = . \"$PSScriptRoot/config.ps1\"\r\n    Register-CobraRepository -Name \"{ModuleName}\" -Description \"$($config.Description)\" -Config $config\r\n}\r\n\r\nfunction Authenticate-{ModuleName}Repo {\r\n    [CmdletBinding()]\r\n    param()\r\n    \r\n    Write-Host \"Authenticating with {ModuleName} repository...\" -ForegroundColor Green\r\n    # Add authentication logic here\r\n    Write-Host \"✓ {ModuleName} authentication complete!\" -ForegroundColor Green\r\n}\r\n\r\nfunction Configure-{ModuleName}Repo {\r\n    [CmdletBinding()]\r\n    param()\r\n    \r\n    Write-Host \"Setting up {ModuleName} repository...\" -ForegroundColor Green\r\n    # Add setup logic here\r\n    Write-Host \"✓ {ModuleName} repository setup complete!\" -ForegroundColor Green\r\n}\r\n\r\nfunction Build-{ModuleName}Repo {\r\n    [CmdletBinding()]\r\n    param(\r\n        [Parameter(Mandatory = $false)]\r\n        [ValidateSet('Build', 'BuildAll', 'Rebuild')]\r\n        [string]$BuildType = 'Build'\r\n    )\r\n    \r\n    Write-Host \"Building {ModuleName} repository with type: $BuildType\" -ForegroundColor Green\r\n    # Add build logic here\r\n    Write-Host \"✓ {ModuleName} repository build complete!\" -ForegroundColor Green\r\n}\r\n\r\nfunction Test-{ModuleName}Repo {\r\n    [CmdletBinding()]\r\n    param()\r\n    \r\n    Write-Host \"Testing {ModuleName} repository...\" -ForegroundColor Green\r\n    # Add test logic here\r\n    Write-Host \"✓ {ModuleName} repository tests passed!\" -ForegroundColor Green\r\n}\r\n\r\nfunction Execute-{ModuleName}Repo {\r\n    [CmdletBinding()]\r\n    param()\r\n    \r\n    Write-Host \"Executing {ModuleName} repository...\" -ForegroundColor Green\r\n    # Add execution logic here\r\n    Write-Host \"✓ {ModuleName} repository execution complete!\" -ForegroundColor Green\r\n}\r\n\r\nfunction Develop-{ModuleName}Repo {\r\n    [CmdletBinding()]\r\n    param()\r\n    \r\n    Write-Host \"Starting development environment for {ModuleName} repository...\" -ForegroundColor Green\r\n    # Add development environment setup logic here\r\n    Write-Host \"✓ {ModuleName} development environment ready!\" -ForegroundColor Green\r\n}\r\n\r\nfunction Read-{ModuleName}PullRequests {\r\n    [CmdletBinding()]\r\n    param()\r\n    \r\n    Write-Host \"Reading pull requests for {ModuleName}...\" -ForegroundColor Green\r\n    # Add pull request reading logic here (Azure DevOps, GitHub, etc.)\r\n    Write-Host \"✓ Pull request retrieval complete!\" -ForegroundColor Green\r\n}\r\n\r\nfunction Open-{ModuleName}PullRequestById {\r\n    [CmdletBinding()]\r\n    param(\r\n        [Parameter(Mandatory = $true)]\r\n        [int]$pullRequestId\r\n    )\r\n    \r\n    Write-Host \"Opening pull request $pullRequestId for {ModuleName}...\" -ForegroundColor Green\r\n    # Add logic to open specific PR (construct URL and launch browser)\r\n    Write-Host \"✓ Pull request opened!\" -ForegroundColor Green\r\n}\r\n\r\nfunction Help-{ModuleName}Repo {\r\n    [CmdletBinding()]\r\n    param()\r\n    \r\n    Write-Host \"Displaying help for {ModuleName} repository...\" -ForegroundColor Green\r\n    # Add help logic here\r\n}\r\n\r\nset-alias -Name {ModuleName} -Value Help-{ModuleName}Repo -Scope Global\r\n\r\nExport-ModuleMember -Function @(\r\n    'Initialize-{ModuleName}Module',\r\n    'Authenticate-{ModuleName}Repo',\r\n    'Configure-{ModuleName}Repo',\r\n    'Build-{ModuleName}Repo',\r\n    'Test-{ModuleName}Repo',\r\n    'Execute-{ModuleName}Repo',\r\n    'Develop-{ModuleName}Repo',\r\n    'Read-{ModuleName}PullRequests',\r\n    'Open-{ModuleName}PullRequestById',\r\n    'Help-{ModuleName}Repo'\r\n)",
      "Name": "{ModuleName}.psm1"
    },
    {
      "Content": "@{\r\n    Name               = \"{ModuleName}\"\r\n    Repo               = \"\"\r\n    AuthMethod         = \"Authenticate-{ModuleName}Repo\"\r\n    SetupMethod        = \"Configure-{ModuleName}Repo\"\r\n    BuildMethod        = \"Build-{ModuleName}Repo\"\r\n    TestMethod         = \"Test-{ModuleName}Repo\"\r\n    RunMethod          = \"Execute-{ModuleName}Repo\"\r\n    DevMethod          = \"Develop-{ModuleName}Repo\"\r\n    ReviewPullRequests = \"Read-{ModuleName}PullRequests\"\r\n    OpenPullRequest    = \"Open-{ModuleName}PullRequestById\"\r\n    Description        = \"{ModuleName} module created from template\"\r\n    GoLocations        = @{\r\n        # Add your go locations here\r\n        # \"main\" = \"C:\\path\\to\\main\\directory\"\r\n    }\r\n}",
      "Name": "config.ps1"
    }
  ],
  "Description": "Basic PowerShell module with standard functions",
  "Name": "basic-module",
  "Author": "Cobra Framework",
  "Created": "2025-08-07 16:39:53"
}
